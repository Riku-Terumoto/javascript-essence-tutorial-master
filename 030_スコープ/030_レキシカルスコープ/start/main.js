// 例１は変数bはfn2関数の中で参照できたが、例２は変数bが参照できない
// このようにコードを記述した場所によって参照できるかが決まることをレキシカルスコープと呼ぶ
// レキシカルスコープは外部変数とも呼ぶ

// 例１
// let a = 2;
// b変数はfn1内の関数スコープで宣言され、fn2の関数スコープで使用されている
// fn1内であれば、もう一段階深い関数スコープの中で使用されていても参照できる
// function fn1() {
//   let b = 1;
//   function fn2() {
//     let c = 3;
//     console.log(b);
//   }
//   fn2();
// }
// fn1();

// 例２
let a = 2;
// b変数はfn1の関数スコープ内のみでしか参照できない
function fn1() {
  let b = 1;
}
fn1();

function fn2() {
  let c = 3;
  console.log(b);
}
fn2();

// まとめ
// レキスカルスコープは二つの意味がある
// ①実行中のコードから見た外部スコープのこと
// ②どのようにしてスコープを決定するかの仕様のこと
