// 関数スコープは{}の中の範囲のことを呼ぶ
function a() {
  let b = 0;
  console.log(b);
}
// a内で宣言したbは外で使うとエラーとなる
// スコープは宣言部分から実行部分が見える(大丈夫)か見えない(エラー)かで変わる
// console.log(b);
a();

// ブロックスコープはただ単に{}のことを表す({}があっても関数宣言されているなら関数スコープとなる)
// ブロックスコープを使う場合の変数宣言はlet,constに限る varを使うとブロックスコープが無視される
// 基本的にブロックスコープはif文やfor文で使用され、単体では使用されない
{
  let c = 1;
  // var c = 1;
  console.log(c);

  // 関数宣言もブロックスコープは無視される
  // function d() {
  //   console.log('d is called');
  // }
  // d();

  // 無名関数のような変数宣言の形にするとブロックスコープは適用される
  const d = function () {
    console.log('d is called');
  };
  d();
}

// d();
// console.log(c);
