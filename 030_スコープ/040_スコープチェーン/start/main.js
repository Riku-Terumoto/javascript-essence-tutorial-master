// スコープが複数に連なっている場合は一番近い部分から参照していく
// ⇨つまり、見つかった値がコンソールに近いほど優先度が高い

// let a = 2;
// function fn1() {
//   let a = 1;
//   function fn2() {
// let a = 3;
// このコンソールで取得できるaはfn2内のaになる
// fn2内を消すとfn1のaが参照することができる
//     console.log(a);
//   }
//   fn2();
// }
// fn1();

// スクリプトスコープとグローバルスコープ

// スクリプトスコープ
let a = 2;
// グローバルスコープ
window.a = 4;
function fn1() {
  //   let a = 1;
  function fn2() {
    // let a = 3;
    // この時のaは2が参照される
    // 2が参照されたと言うことはスクリプトスコープの方が近いと言うこと 逆を言うとグローバルスコープはスクリプトスコープより外側にあるということ
    console.log(a);
    // letの宣言より早く値を参照しようとするとエラーとなる（ホイスティング参照）
    // let a = 3;

    // varで宣言してしまうとホイスティングでundefinedが設定され、エラーとならない
    // プラスでグローバルスコープは無視されるのでvarは非推奨っていうのもあるが使わない
    if (true) {
      var a = 3;
    }
  }
  fn2();
}
fn1();
