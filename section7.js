// 関数とオブジェクト

// 関数は実行可能なオブジェクトである（非常に重要）

// コールバック関数・・・他の関数に引数として渡される関数

// this・・・呼び出し元のオブジェクトへの参照を保持するキーワード
// 関数コンテキストでJavaScriptエンジンによって設定される一つがthis(関数内で使える)
// グローバルコンテキストでも使えるが、主に関数コンテキストで使用することが多い
// 実行コンテキストによってthisの参照先は変わる

// 参照とコピー
// オブジェクトのメソッドとして実行される場合の参照
// this⇨呼び出し元オブジェクト

// 関数として実行される場合の参照
// this⇨グローバルオブジェクト

// thisがどこを参照しているか分からなくなった時はデベロッパーツールのSourcesで確認する
// thisが表示されていなかったらWatchでthisと入力すれば現在の参照が分かる

// bindとthis
// bind・・・thisや引数の参照先を変更 使用時点では実行はしない
// bindによってthisや引数を固定した新しい関数を作成
// ⇨これをbindによるthisの束縛と呼ぶ

// call,applyとthis
// call、apply・・・thisや引数の参照先を変更 同時に関数を実行する
// apply・・・第二引数以下で指定した配列を展開し、引数に渡し、固定する機能もある
// call・・・第二引数以下で指定した値を引数に渡し、固定する機能もある

// アロー関数・・・無名関数を記述しやすくした省略記法(ES6から追加)
// () => {}

// 無名関数とアロー関数は機能が違う
//      |無名関数|アロー関数|
// this     |●    |×|
// arguments|●    |×|
// new      |●    |×|
// prototype|●    |×|

// アロー関数とthis
